#!/bin/env bash

__filter() {
    if [[ $# -eq 0 ]]; then
        echo "cat"
    else
        echo "fzf --filter \"${*}\""
    fi
}

__zoxide_filter() {
    filter_opts="
    --exact --scheme history
    --tiebreak end,chunk,index
    "
    opts="
    $FZF_DEFAULT_OPTS
    $filter_opts
    --prompt \"Zoxide > \" 
    --delimiter / --nth -1,-2,-3 
    --exit-0
    $FILTER_FZF_DEFAULT_OPTS
    "

    # shellcheck disable=SC2068
    directories=$(
        (
            [[ $stdin == "before" ]] && cat -
            zoxide query --list | eval "$(FZF_DEFAULT_OPTS="$filter_opts" __filter $@)" |
                lscolors
            [[ $stdin == "after" ]] && cat -
        ) | FZF_DEFAULT_OPTS="$opts" ${fzf_bin:-fzf}
    )
    exit_code=$?
}

main() {
    [[ -v TMUX ]] && command -v fzf-tmux &> /dev/null && fzf_bin="fzf-tmux $FZF_TMUX_OPTS"

    typeset exit_code directories stdin

    args=$(getopt -o P -l after,before -n "$0" -- "$@")
    eval set -- "$args"

    while true; do
        case $1 in
        -P)
            fzf_bin=
            shift
            ;;
        --after | --before)
            stdin=${1:2}
            shift
            ;;
        --)
            shift
            break
            ;;
        *)
            echo "arg error"
            exit 1
            ;;
        esac
    done

    __${mode}_filter "$@" && [[ $exit_code -eq 130 ]] && return "$exit_code"

    echo "$directories"
    return "$exit_code"
}

valid_modes=(
    "zoxide"
    "git"
)

if [[ -z $1 || " ${valid_modes[*]} " != *"$1"* ]]; then
    echo "$1 not in ${valid_modes[*]}"
    exit 1
fi

mode=$1
shift

main "$@"

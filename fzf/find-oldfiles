#!/usr/bin/env bash

# Desc: open most recently viewed files in nvim with fzf

get_oldfiles() {
    [[ -z "$oldfiles" ]] && oldfiles="/tmp/nv-oldfiles.tmp"
    [[ -z "${filterfiles}" ]] && filterfiles="/tmp/nv-filterfiles.tmp"

    nvim --headless -c "call append(0, v:oldfiles)" \
        -c "write! $oldfiles" \
        -c exit 1> /dev/null 2>&1

    [[ -e ${filterfiles} ]] && truncate --size 0 ${filterfiles}
    while read -r file; do

        if [[ -e ${file} && -r ${file} && ! ${file} =~ ^/tmp && ! ${file} =~ .git ]]; then
            echo "${file}" >> ${filterfiles}
        fi
    done < "${oldfiles}"
}
fzf_search() {
    [[ $# -gt 0 ]] && filter_query="${*}"

    action=/tmp/$$
    [[ -e $action ]] && exit 1
    trap "command rm -f $action" EXIT SIGINT SIGTERM

    action_e="execute(${EDITOR} {+} > /dev/tty < /dev/tty)"

    readarray -t files < <(
        cat "${filterfiles}" | lscolors | ${fzf_bin:-fzf} \
            --prompt="Oldfiles> " ${filter_query:+--filter "${filter_query}"} \
            --scheme history --exact \
            --delimiter / --nth -1 \
            --select-1 --exit-0 --header-first \
            --header "keybindings: C-s(hsp), C-v(vsp), C-o(fzf-tmux-menu), A-e(execute editor), Enter(select or new file)" \
            --bind="ctrl-s:transform:echo h > $action; echo accept" \
            --bind="ctrl-v:transform:echo v > $action; echo accept" \
            --bind="ctrl-o:transform:echo m > $action; echo accept" \
            --bind="alt-e:transform:[[ \"${fzf_bin}\" ]] && echo \"ignore\" || echo \"${action_e}\"" \
            --bind="enter:accept-or-print-query" | sed -n "${filter_query:+1}p"
    )
}

exec_action() {
    flag=$(command cat "$action" 2> /dev/null)

    mkdir -p "$(dirname "${files}")" &> /dev/null
    if [[ "${flag}" =~ ^(h|v)$ ]]; then
        tmux splitw "-b${flag}" zsh -c "${EDITOR} ${files[*]}"
    elif [[ "${flag}" == m ]]; then
        $CUSTOM_HOME/scripts/tmux/tmux-menu "${files[*]}"
    else
        ${EDITOR} "${files[@]}"

    fi
}

main() {
    [[ -v TMUX ]] && command -v fzf-tmux &> /dev/null && fzf_bin="fzf-tmux $FZF_TMUX_OPTS"

    typeset filterfiles action files

    typeset args

    args=$(getopt -o z -l no-popup -n "$0" -- "$@")
    if [[ "$?" -ne 0 ]]; then
        echo "getopt parse error, args:${*}"
        exit 1
    fi
    eval set -- "$args"

    while true; do
        case $1 in
        --no-popup)
            fzf_bin=
            shift
            ;;
        --)
            shift
            break
            ;;
        *)
            echo "flag error"
            exit 1
            ;;

        esac
    done

    get_oldfiles

    set -x
    if [[ $# -eq 1 && $1 == - ]]; then
        files=$(sed -n '1p' "${filterfiles}")
    else
        [[ $# -gt 0 && ${fzf_bin} ]] && fzf_bin=
        fzf_search "$@"
    fi

    [[ ${#files[@]} -gt 0 ]] && exec_action
}

main "$@"
